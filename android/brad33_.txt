package tw.brad.apps.brad33;
//玩ExpandableListView可以擴充view
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ExpandableListView;
import android.widget.TextView;

import java.util.HashMap;
import java.util.LinkedList;

public class MainActivity extends AppCompatActivity {
    private ExpandableListView expList;
    private LinkedList<HashMap<String,String>> groups; //宣告資料有很多
    private LinkedList<HashMap<String,String>> items1;  //一個裡面的子項目
    private LinkedList<HashMap<String,String>> items2;  //一個裡面的子項目
    private MyAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        expList = findViewById(R.id.expList);//抓到ExpandableListView 的view
        init();
    }
    //初始話設定
    private  void init(){
        groups = new LinkedList<>();
        items1 = new LinkedList<>();
        items2 = new LinkedList<>();

        //設置2個項目上去
        HashMap<String,String> gitem1 = new HashMap<>();
        gitem1.put("group","訂單");groups.add(gitem1);
        HashMap<String,String> gitem2 = new HashMap<>();
        gitem1.put("group","結案");groups.add(gitem2);

        //建造兩群資料
        for(int i=0; i<40; i++){
            HashMap<String,String> row = new HashMap<>();
            row.put("title","itemi:" + i);
            items1.add(row);
        }

        for(int i=0; i<150; i++){
            HashMap<String,String> row = new HashMap<>();
            row.put("title","itemi:" + i);
            items2.add(row);
        }


        //用調變器來處理
        adapter = new MyAdapter();
        expList.setAdapter(adapter);//設置調變器(這次用BaseExpandableListAdapter)
        expList.expandGroup(0);//展開第幾個grounp(第幾個)
        expList.expandGroup(1);

    }

    //用BaseExpandableListAdapter來放,處理抽象方法
    private  class MyAdapter extends BaseExpandableListAdapter {

        //有幾個Group
        @Override
        public int getGroupCount() {
            return groups.size();
        }

        //小朋友幾群
        @Override
        public int getChildrenCount(int i) {
            if (i==0){ //如果i是0項目
                return  items1.size();
            }else if (i==1){//如果是第一項目
                return  items2.size();
            }
            return 0;
        }
        //取得group
        @Override
        public Object getGroup(int i) {
            return null;
        }

        @Override
        public Object getChild(int i, int j) {
            if(i == 0){
                return  items1.get(j);
            }else if(1==1){
                return  items2.get(j);
            }
            return null;
        }

        @Override
        public long getGroupId(int i) {
            return 0;
        }

        @Override
        public long getChildId(int i, int i1) {
            return 0;
        }

        @Override
        public boolean hasStableIds() {
            return false;
        }

        //取得groupview爸爸畫面(1.你是第幾個group2)
        @Override
        public View getGroupView(int i, boolean b, View view, ViewGroup viewGroup) {
            LayoutInflater inflater = getLayoutInflater();
            View groupView = inflater.inflate(R.layout.item_parent,viewGroup,false);

            TextView title = groupView.findViewById(R.id.group_title);//把title頁面抓到
            title.setText(groups.get(i).get("group"));

            return groupView;
        }

        //取得小朋友的畫面
        @Override
        public View getChildView(int i, int j, boolean b, View view, ViewGroup viewGroup) {
            LayoutInflater inflater = getLayoutInflater();
            View childView = inflater.inflate(R.layout.item_parent,viewGroup,false);

            TextView title = childView.findViewById(R.id.child_title);//把小朋友畫面頁面抓到
            if(i== 0){ //如果式項目0
                title.setText(items1.get(j).get("title"));
            }else{//其他的話
                title.setText(items2.get(j).get("title"));
            }
            title.setText(groups.get(i).get("title"));

            return childView;

        }

        @Override
        public boolean isChildSelectable(int i, int i1) {
            return false;
        }
    }
}
