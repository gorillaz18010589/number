package tw.brad.apps.brad30;
//目的:按下時間框框或點選日期,跳出日期框
//2.設計吐司麵包,在res新增一個新的layout,使用自訂的toast
//3.挑選最新版本,
//4.搭配新版本(未用)
//加入implementation 'com.android.support:design:28.0.0'
import androidx.appcompat.app.AppCompatActivity;

import android.app.DatePickerDialog;
import android.os.Bundle;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.material.snackbar.Snackbar;

import java.util.Calendar;

public class MainActivity extends AppCompatActivity {
    private TextView birthday;
    private View rootView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        rootView = findViewById(R.id.rootView);
        birthday = findViewById(R.id.birthday);

    }

    //創建輸入框,請他點選生日呼叫方法
    public void selectDate(View view) {
       final DatePickerDialog dialog = new DatePickerDialog(this, //1.這個頁面
               DatePickerDialog.THEME_DEVICE_DEFAULT_DARK, //2.模式
               null,2019,8,15);//3.預設日期

        //當點選日期對話框觸發式建
       dialog.setOnDateSetListener(new DatePickerDialog.OnDateSetListener() {
           @Override
           public void onDateSet(DatePicker datePicker, int year, int month, int day) { //回傳年,月,日
               birthday.setText(year +"/" + month  +"/" + day);//顯示在螢幕

           }
       });


       DatePicker picker= dialog.getDatePicker(); //從肚子裡取得日期picker
package tw.brad.apps.brad30;
//目的:按下時間框框或點選日期,跳出日期框
//2.設計吐司麵包,在res新增一個新的layout,使用自訂的toast
//3.挑選最新版本,
//4.搭配新版本(未用)
//加入implementation 'com.android.support:design:28.0.0'
import androidx.appcompat.app.AppCompatActivity;

import android.app.DatePickerDialog;
import android.os.Bundle;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.material.snackbar.Snackbar;

import java.util.Calendar;

public class MainActivity extends AppCompatActivity {
    private TextView birthday;
    private View rootView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        rootView = findViewById(R.id.rootView);
        birthday = findViewById(R.id.birthday);

    }

    //創建輸入框,請他點選生日呼叫方法
    public void selectDate(View view) {
       final DatePickerDialog dialog = new DatePickerDialog(this, //1.這個頁面
               DatePickerDialog.THEME_DEVICE_DEFAULT_DARK, //2.模式
               null,2019,8,15);//3.預設日期

        //當點選日期對話框觸發式建
       dialog.setOnDateSetListener(new DatePickerDialog.OnDateSetListener() {
           @Override
           public void onDateSet(DatePicker datePicker, int year, int month, int day) { //回傳年,月,日
               birthday.setText(year +"/" + month  +"/" + day);//顯示在螢幕

           }
       });


       DatePicker picker= dialog.getDatePicker(); //從肚子裡取得日期picker

        //指定這個日期以後的時間都不能選
        Calendar limit = Calendar.getInstance();//取得日立的資料物件實體
        limit.set(2019,8,15); //設定日期
        long limitdate = limit.getTimeInMillis(); //取得這個物件的千分之一秒
        picker.setMaxDate(limitdate); //設置最大的

        dialog.show();//顯示出來
    }

    //按按鈕出現toast提醒一般版本
    public void test1(View view){
        Toast toast = Toast.makeText(this,"hello,world",Toast.LENGTH_SHORT);
        toast.setGravity(Gravity.FILL_HORIZONTAL + Gravity.CENTER_VERTICAL,
                0,0);//專門設計一個版面容器(水平置中,垂直至中,偏移量x,偏移量y)
//        toast.show();
        showMyToast("haha");//呼叫自訂的toast的方法
    }

    //險是我自訂的toast的圖片跟設計
    private  void showMyToast(String mesg){
       LayoutInflater layoutInflater = getLayoutInflater(); //從你這裡的activity取得浮現的東西物件實體
       View view = layoutInflater.inflate(R.layout.toast_view,null);//指定我要的畫面為(資源區)

        TextView txtMesg = view.findViewById(R.id.toast_mesg);
        txtMesg.setText(mesg); //你輸入的自訂文字顯示出來

        //設定toast的調整,跟我自己設計的整合
        Toast toast = new Toast(this);
        toast.setGravity(Gravity.FILL_HORIZONTAL + Gravity.CENTER_VERTICAL,
                0,100);//專門設計一個版面容器(水平置中,垂直至中,偏移量x,偏移量y)
        toast.setDuration(Toast.LENGTH_SHORT); //出現短短的時間
        toast.setView(view);
        toast.show();

    }
    //引入Snackbar類似toast
    public void test2(View view) {
        Snackbar.make(rootView,
                "Hello, World",Snackbar.LENGTH_LONG).show();
    }
}
===========================
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/rootView"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">

  <TextView
      android:id="@+id/birthday"
      android:layout_width="match_parent"
      android:layout_height="wrap_content"
      android:onClick="selectDate"
      />
  <Button
      android:layout_width="match_parent"
      android:layout_height="wrap_content"
      android:text="test1"
      android:onClick="test1"
      />
  <Button
      android:layout_width="match_parent"
      android:layout_height="wrap_content"
      android:text="test2"
      android:onClick="test2"
      />

</LinearLayout>
===================================
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="tw.brad.apps.brad30">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

===========================

dependencies {
 
    implementation 'com.android.support:design:28.0.0'


}

